
server
{
    listen 8084;
    access_log /usr/local/openresty/nginx/logs/access.log;
    location /
    {
        default_type text/html;
        content_by_lua
        '
            a = io.popen("pwd")
            --ngx.say(a)
        ';
        #content_by_lua_file /usr/local/openresty/nginx/sites-available/test.lua;
    }
}

#MYSQLs

server
{
    listen 8086;
    location ~* /(\w+)$
    {
        default_type text/html;
        rds_json_root rows;
        set $USER $1;

        content_by_lua '

            local cjson = require "cjson"    
            local mysql = require "resty.mysql"
            local db, err = mysql:new()
            local user = ngx.var.USER -- Grabs the user name from the URL
            local che_port = 8090 --Default port for che

            if not db then
                ngx.say("failed to instantiate mysql: ", err)
                return
            end

            db:set_timeout(1000) -- 1 sec

            local ok, err, errcode, sqlstate = db:connect{
               host = "127.0.0.1",
               port = 3306,
               database = "nginx",
               user = "root",
               password = "root",
               max_packet_size = 1024 * 1024 
            }

            if not ok then
                ngx.log(ngx.ERR,"failed to connect: ", err, ": ", errcode, " ", sqlstate)
                return
            end

            ngx.say("connected to mysql.")

            res, err, errcode, sqlstate = db:query("select * from Containers where Matricula=\'" .. user .."\'")

            ngx.say(#res)
            result = cjson.encode(res)

            ngx.say(result)
            -- The query didnt return a response or ended in error. 
            -- If the query returned nothing, then the container with the name equal to user, doesnt     -- exist yet.
            if #res == 0 then
                                
                ngx.log(ngx.ERR, "Segunda mensagem")
                -- Searches for a container with the biggest Porta value, to increment it and use it on --the next container
                res, err, errcode, sqlstate = db:query("select Porta from Containers order by Porta desc")

                ngx.say("Resultado")
                result = cjson.encode(res)
                
                ngx.say(#res)
                ngx.say(result)

                -- This means no row was found or another mistake, assuming no row was found ...           
                if result[n] == nil then
                    
                    ngx.say("Segundo if")
                    ngx.log(ngx.ERR,"Terceira mensage")
                    res, err, errcode, sqlstate = db:query("insert into Containers (Matricula,Porta) values (\'" ..user.. "\',"..che_port..")")
                    
                    result = cjson.encode(res)
                    ngx.say(result)
                    return

                -- A row was found in the table, so users already exist 
                else
                    ngx.say("Terceiro if")
                    return
                end
            end
        ';
    }
}